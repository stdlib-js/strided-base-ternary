// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,l=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;var c=t,_=function(e,r,t){var c,_,f,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),f="get"in t,p="set"in t,_&&(f||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return f&&a&&a.call(e,r,t.get),p&&l&&l.call(e,r,t.set),e},f=r()?c:_;function p(e,r,t,o){var n,a,l,i,u,c,_,f,p,b,y,d,v,s;if(!((v=r[0])<=0))for(u=(n=t[0])<0?(1-v)*n:0,c=(a=t[1])<0?(1-v)*a:0,_=(l=t[2])<0?(1-v)*l:0,f=(i=t[3])<0?(1-v)*i:0,p=e[0],b=e[1],y=e[2],d=e[3],s=0;s<v;s++)d[f]=o(p[u],b[c],y[_]),u+=n,c+=a,_+=l,f+=i}function b(e,r,t,o,n){var a,l,i,u,c,_,f,p,b,y,d,v,s,j;if(!((s=r[0])<=0))for(c=o[0],_=o[1],f=o[2],p=o[3],a=t[0],l=t[1],i=t[2],u=t[3],b=e[0],y=e[1],d=e[2],v=e[3],j=0;j<s;j++)v[p]=n(b[c],y[_],d[f]),c+=a,_+=l,f+=i,p+=u}(function(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})})(p,"ndarray",b);export{p as default,b as ndarray};
//# sourceMappingURL=mod.js.map
